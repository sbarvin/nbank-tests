package ui;

import com.codeborne.selenide.Condition;
import com.codeborne.selenide.Selenide;
import models.CreateUserRequest;
import models.DepositAccountResponse;
import models.LoginUserRequest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Alert;
import requests.skelethon.Endpoint;
import requests.skelethon.requesters.CrudRequester;
import requests.steps.AccountSteps;
import requests.steps.AdminSteps;
import specs.RequestSpecs;
import specs.ResponseSpecs;

import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;
import static org.assertj.core.api.Assertions.assertThat;

public class DepositAccountTest extends BaseTest {

    private static CreateUserRequest userRequest;
    private static String authToken;
    private static long accountId;
    private static DepositAccountResponse startAccountInfo;

    @BeforeAll
    public static void setupUser() {

        //—Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userRequest = AdminSteps.createUser();

        //–ø–æ–ª—É—á–∞–µ–º authToken
        authToken = new CrudRequester(
                RequestSpecs.unauthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOK())
                .post(LoginUserRequest.builder().username(userRequest.getUsername()).password(userRequest.getPassword()).build())
                .extract()
                .header("Authorization");

        //—Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç (—Å—á–µ—Ç)
        accountId = AccountSteps.createAccounts(userRequest, 1).getFirst();
    }

    @BeforeEach
    public void setupStartAccountInfo() {

        //–∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å—á–µ—Ç—É
        startAccountInfo = AccountSteps.getAccountInfo(userRequest, accountId);
    }

    @Test
    public void userCanDepositIfAccountExists() {

        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", authToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üí∞ Deposit Money
        $$("button").findBy(Condition.exactText("üí∞ Deposit Money")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üí∞ Deposit Money")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startAccountInfo.getAccountNumber(),
                                String.format("%.2f", startAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        var depositAmount = "50.10";
        $(".deposit-input").setValue(depositAmount);

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Deposit
        $$("button").findBy(Condition.exactText("üíµ Deposit")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("Successfully deposited $%s to account %s!", depositAmount, startAccountInfo.getAccountNumber()));

        //–ü—Ä–æ–≤–µ—Ä—è–º, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É /dashboard
        $$("h1").findBy(Condition.exactText("User Dashboard")).shouldBe(visible);

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–ø–ª–Ω–µ–Ω–∏—è
        var actualBalance = AccountSteps.getAccountBalance(userRequest, accountId);
        Assertions.assertEquals(startAccountInfo.getBalance() + Double.parseDouble(depositAmount), actualBalance);

    }

    @Test
    public void userCannotDepositIfAccountNotChosen() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", authToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üí∞ Deposit Money
        $$("button").findBy(Condition.exactText("üí∞ Deposit Money")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üí∞ Deposit Money")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å
        $(".account-selector").selectOption("-- Choose an account --");

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        var depositAmount = "50.10";
        $(".deposit-input").setValue(depositAmount);

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Deposit
        $$("button").findBy(Condition.exactText("üíµ Deposit")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå Please select an account.");

        //–ü—Ä–æ–≤–µ—Ä—è–º, —á—Ç–æ –º—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω—Ü–∏–µ
        $$("h1").findBy(Condition.exactText("üí∞ Deposit Money")).shouldBe(visible);

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–ø–ª–Ω–µ–Ω–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualBalance = AccountSteps.getAccountInfo(userRequest, accountId);
        Assertions.assertEquals(startAccountInfo, actualBalance);
    }

    @Test
    public void userCannotDepositInvalidBalance() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", authToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üí∞ Deposit Money
        $$("button").findBy(Condition.exactText("üí∞ Deposit Money")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üí∞ Deposit Money")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startAccountInfo.getAccountNumber(),
                                String.format("%.2f", startAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        var depositAmount = "-50.10";
        $(".deposit-input").setValue(depositAmount);

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Deposit
        $$("button").findBy(Condition.exactText("üíµ Deposit")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå Please enter a valid amount.");

        //–ü—Ä–æ–≤–µ—Ä—è–º, —á—Ç–æ –º—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω—Ü–∏–µ
        $$("h1").findBy(Condition.exactText("üí∞ Deposit Money")).shouldBe(visible);

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞ –ø–æ—Å–ª–µ –ø–æ–ø–ª–Ω–µ–Ω–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualBalance = AccountSteps.getAccountInfo(userRequest, accountId);
        Assertions.assertEquals(startAccountInfo, actualBalance);
    }
}

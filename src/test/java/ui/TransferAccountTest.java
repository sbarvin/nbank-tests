package ui;

import com.codeborne.selenide.Condition;
import com.codeborne.selenide.Selenide;
import generators.RandomData;
import models.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Alert;
import requests.skelethon.Endpoint;
import requests.skelethon.requesters.CrudRequester;
import requests.skelethon.requesters.ValidatedCrudRequester;
import requests.steps.AccountSteps;
import requests.steps.AdminSteps;
import specs.RequestSpecs;
import specs.ResponseSpecs;

import java.util.List;

import static com.codeborne.selenide.Condition.disappear;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;
import static org.assertj.core.api.Assertions.assertThat;

public class TransferAccountTest extends BaseTest {

    private static CreateUserRequest userSenderRequest;
    private static CreateUserRequest userReceiverRequest;
    private static String senderAuthToken;
    private static long senderAccountId;
    private static long receiverAccountId;
    private static DepositAccountResponse startSenderAccountInfo;
    private static DepositAccountResponse startReceiverAccountInfo;

    @BeforeAll
    public static void setupUser() {

        //—Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        userSenderRequest = AdminSteps.createUser();
        userReceiverRequest = AdminSteps.createUser();

        //–ø–æ–ª—É—á–∞–µ–º authToken
        senderAuthToken = new CrudRequester(
                RequestSpecs.unauthSpec(),
                Endpoint.LOGIN,
                ResponseSpecs.requestReturnsOK())
                .post(LoginUserRequest.builder().username(userSenderRequest.getUsername()).password(userSenderRequest.getPassword()).build())
                .extract()
                .header("Authorization");

        //—Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç (—Å—á–µ—Ç)
        senderAccountId = AccountSteps.createAccounts(userSenderRequest, 1).getFirst();
        receiverAccountId = AccountSteps.createAccounts(userReceiverRequest, 1).getFirst();

        //–ø–æ–ø–æ–ª–Ω—è–µ–º —Å—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –Ω–∞ 100
        AccountSteps.depositAccount(userSenderRequest, senderAccountId, 100d);

        //–æ–±–Ω–æ–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        List.of(userSenderRequest, userReceiverRequest).forEach(
                userRequest -> {
                    new ValidatedCrudRequester<CustomerProfileResponse>(
                            RequestSpecs.authAsUser(userRequest.getUsername(), userRequest.getPassword()),
                            Endpoint.CUSTOMER_PROFILE_UPDATE,
                            ResponseSpecs.requestReturnsOK()
                    ).put(new CustomerProfileRequest(userRequest.getUsername()));
                }
        );
    }

    @BeforeEach
    public void setupStartAccountInfo() {

        //–∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å—á–µ—Ç—É
        startSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        startReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);
    }

    @Test
    public void userCanTransferWithCorrectData() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "1.00";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("‚úÖ Successfully transferred $%s to account %s!", transferAmount, startReceiverAccountInfo.getAccountNumber()));

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var actualSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var actualReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        startSenderAccountInfo.getBalance() - Double.valueOf(transferAmount),
                        actualSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        startReceiverAccountInfo.getBalance() + Double.valueOf(transferAmount),
                        actualReceiverAccountInfo.getBalance()
                )
        );
    }

    @Test
    public void userCannotTransferInvalidAmount() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "-1";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå Error: Invalid transfer: insufficient funds or invalid accounts");

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var actualReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(startSenderAccountInfo, actualSenderAccountInfo),
                () -> Assertions.assertEquals(startReceiverAccountInfo, actualReceiverAccountInfo)
        );
    }

    @Test
    public void userCannotTransferWithUncheckedConfirmationBox() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "1";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå Please fill all fields and confirm.");
        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var actualReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(startSenderAccountInfo, actualSenderAccountInfo),
                () -> Assertions.assertEquals(startReceiverAccountInfo, actualReceiverAccountInfo)
        );
    }

    @Test
    public void userCanRepeatExistingTransferFromHistory() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "3.00";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("‚úÖ Successfully transferred $%s to account %s!", transferAmount, startReceiverAccountInfo.getAccountNumber()));

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var afterTransferSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var afterTransferReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        startSenderAccountInfo.getBalance() - Double.valueOf(transferAmount),
                        afterTransferSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        startReceiverAccountInfo.getBalance() + Double.valueOf(transferAmount),
                        afterTransferReceiverAccountInfo.getBalance()
                )
        );

        //–ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ñ–æ—Ä–º—É üîÅ Transfer Again
        $$("button").findBy(Condition.exactText("üîÅ Transfer Again")).click();

        //–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        $("input[placeholder='Enter name to find transactions']").setValue(userReceiverRequest.getUsername());

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîç Search Transactions
        $$("button").findBy(Condition.exactText("üîç Search Transactions")).click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÅ Repeat
        $$("button").findBy(Condition.exactText("üîÅ Repeat")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        $$(".modal-title").findBy(Condition.exactText("üîÅ Repeat transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $("select.form-control")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–Ω–µ –≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –ø–æ–ª–µ —Å—Ç–æ–∏—Ç 1
        var defatultTransferRepeatAmount = "1";

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        alert = switchTo().alert();
        assertThat(alert.getText()).contains(
                String.format("‚úÖ Transfer of $%s successful from Account %s to %s!",
                        defatultTransferRepeatAmount, senderAccountId, receiverAccountId
                )
        );

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var afterRepeatTransferSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var afterRepeatTransferReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        afterTransferSenderAccountInfo.getBalance() - Double.valueOf(defatultTransferRepeatAmount),
                        afterRepeatTransferSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        afterTransferReceiverAccountInfo.getBalance() + Double.valueOf(defatultTransferRepeatAmount),
                        afterRepeatTransferReceiverAccountInfo.getBalance()
                )
        );
    }

    @Test
    public void userCannotSeeMatchingTransactionsWhenNoMatchFound() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "3.00";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("‚úÖ Successfully transferred $%s to account %s!", transferAmount, startReceiverAccountInfo.getAccountNumber()));

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var afterTransferSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var afterTransferReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        startSenderAccountInfo.getBalance() - Double.valueOf(transferAmount),
                        afterTransferSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        startReceiverAccountInfo.getBalance() + Double.valueOf(transferAmount),
                        afterTransferReceiverAccountInfo.getBalance()
                )
        );

        //–ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ñ–æ—Ä–º—É üîÅ Transfer Again
        $$("button").findBy(Condition.exactText("üîÅ Transfer Again")).click();

        //–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        $("input[placeholder='Enter name to find transactions']").setValue(RandomData.getUsername());

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîç Search Transactions
        $$("button").findBy(Condition.exactText("üîç Search Transactions")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå No matching users found.");

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var actualReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(afterTransferSenderAccountInfo, actualSenderAccountInfo),
                () -> Assertions.assertEquals(afterTransferReceiverAccountInfo, actualReceiverAccountInfo)
        );
    }

    @Test
    public void userCannotRepeatTransferWithInvalidAmount() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "3.00";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("‚úÖ Successfully transferred $%s to account %s!", transferAmount, startReceiverAccountInfo.getAccountNumber()));

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var afterTransferSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var afterTransferReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        startSenderAccountInfo.getBalance() - Double.valueOf(transferAmount),
                        afterTransferSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        startReceiverAccountInfo.getBalance() + Double.valueOf(transferAmount),
                        afterTransferReceiverAccountInfo.getBalance()
                )
        );

        //–ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ñ–æ—Ä–º—É üîÅ Transfer Again
        $$("button").findBy(Condition.exactText("üîÅ Transfer Again")).click();

        //–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        $("input[placeholder='Enter name to find transactions']").setValue(userReceiverRequest.getUsername());

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîç Search Transactions
        $$("button").findBy(Condition.exactText("üîç Search Transactions")).click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÅ Repeat
        $$("button").findBy(Condition.exactText("üîÅ Repeat")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        $$(".modal-title").findBy(Condition.exactText("üîÅ Repeat transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $("select.form-control")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä–∞–≤–Ω—É—é 0
        $(".form-control[type='number']").setValue("0.00");

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        alert = switchTo().alert();
        assertThat(alert.getText()).contains("‚ùå Transfer failed: Please try again.");

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
        var actualSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var actualReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(afterTransferSenderAccountInfo, actualSenderAccountInfo),
                () -> Assertions.assertEquals(afterTransferReceiverAccountInfo, actualReceiverAccountInfo)
        );
    }

    @Test
    public void userCannotTransferWithUncheckedConfirmationBoxAnd–°anCloseModalForm() {
        //–∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ /dashboard
        Selenide.open("/");

        Selenide.executeJavaScript("localStorage.setItem('authToken', arguments[0]);", senderAuthToken);

        Selenide.open("/dashboard");

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÑ Make a Transfer
        $$("button").findBy(Condition.exactText("üîÑ Make a Transfer")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /deposit –µ—Å—Ç—å —Ç–µ–≥ h1 —Å —Ç–µ–∫—Å—Ç–æ–º üí∞ Deposit Money
        $$("h1").findBy(Condition.exactText("üîÑ Make a Transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $(".account-selector")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–≤–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient name']").setValue(userReceiverRequest.getUsername());

        //–≤–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        $("input[placeholder='Enter recipient account number']").setValue(startReceiverAccountInfo.getAccountNumber());

        //–≤–≤–æ–¥–∏–º —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var transferAmount = "3.00";
        $("input[placeholder='Enter amount']").setValue(transferAmount);

        //–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º Confirm details are correct
        $("#confirmCheck").click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üöÄ Send Transfer
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).click();

        //–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–ª–ª–µ—Ä—Ç–∞
        Alert alert = switchTo().alert();
        assertThat(alert.getText()).contains(String.format("‚úÖ Successfully transferred $%s to account %s!", transferAmount, startReceiverAccountInfo.getAccountNumber()));

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ —Å—á–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –±–∞–ª–∞–Ω—Å —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –∞ –Ω–∞ —Å—á–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –Ω–∞ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        var afterTransferSenderAccountInfo = AccountSteps.getAccountInfo(userSenderRequest, senderAccountId);
        var afterTransferReceiverAccountInfo = AccountSteps.getAccountInfo(userReceiverRequest, receiverAccountId);

        Assertions.assertAll(
                () -> Assertions.assertEquals(
                        startSenderAccountInfo.getBalance() - Double.valueOf(transferAmount),
                        afterTransferSenderAccountInfo.getBalance()
                ),
                () -> Assertions.assertEquals(
                        startReceiverAccountInfo.getBalance() + Double.valueOf(transferAmount),
                        afterTransferReceiverAccountInfo.getBalance()
                )
        );

        //–ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ñ–æ—Ä–º—É üîÅ Transfer Again
        $$("button").findBy(Condition.exactText("üîÅ Transfer Again")).click();

        //–Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        $("input[placeholder='Enter name to find transactions']").setValue(userReceiverRequest.getUsername());

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîç Search Transactions
        $$("button").findBy(Condition.exactText("üîç Search Transactions")).click();

        //–Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É üîÅ Repeat
        $$("button").findBy(Condition.exactText("üîÅ Repeat")).click();

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        $$(".modal-title").findBy(Condition.exactText("üîÅ Repeat transfer")).shouldBe(visible);

        //–≤—ã–±–∏—Ä–∞–µ–º —Å—á–µ—Ç, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏–º –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
        $("select.form-control")
                .selectOption(
                        String.format("%s (Balance: $%s)",
                                startSenderAccountInfo.getAccountNumber(),
                                String.format("%.2f", startSenderAccountInfo.getBalance())
                        ).replace(",", ".")
                );

        //–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ üöÄ Send Transfer –∑–∞–¥–µ–∑–µ–π–±–ª–∏–Ω–∞
        $$("button").findBy(Condition.exactText("üöÄ Send Transfer")).shouldBe(Condition.disabled);

        //–∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        $$("button").findBy(Condition.exactText("Cancel")).click();
        $(".modal-content").should(disappear);

    }

}
